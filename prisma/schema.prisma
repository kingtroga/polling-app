// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id           Int     @id @default(autoincrement())
  name         String
  email        String  @unique
  passwordHash String

  // Relationships
  createdPolls Poll[] // One user can create many polls
  votes        Vote[] // One user can have many votes

  @@map("users")
}

model Poll {
  id          Int      @id @default(autoincrement())
  question    String
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  creatorId   Int

  creator  User         @relation(fields: [creatorId], references: [id])
  options  PollOption[] 
  votes    Vote[]       

  @@map("polls")
}

model PollOption {
  id     Int    @id @default(autoincrement())
  text   String
  pollId Int

  poll  Poll   @relation(fields: [pollId], references: [id], onDelete: Cascade)
  votes Vote[] 

  @@map("poll_options")
}

model Vote {
  id           Int @id @default(autoincrement())
  userId       Int
  pollId       Int
  pollOptionId Int

  user       User       @relation(fields: [userId], references: [id])
  poll       Poll       @relation(fields: [pollId], references: [id], onDelete: Cascade)
  pollOption PollOption @relation(fields: [pollOptionId], references: [id], onDelete: Cascade)

  @@unique([userId, pollId])
  @@map("votes")
}